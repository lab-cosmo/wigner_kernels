data type: double
random seed: 0
batch size: 10000
conversion factor: NO_CONVERSION
target key: dipole_b3lyp
dataset path: datasets/qm9_dipoles.xyz
n_test: 1000
n_train: 500
r_cut: 5.0
nu_max: 4
l_max: 3
optimization target: mae
Density parameters: C=0.03, L_NU=0.0, L_R=1.0
Gaussian smoothing map for r = 1, 2, 3, 4 A:
nu = 1: 0.08154845485377135 0.2216716829679195 0.60256610769563 1.637944500994327
nu = 2: 0.08154845485377135 0.2216716829679195 0.60256610769563 1.637944500994327
nu = 3: 0.08154845485377135 0.2216716829679195 0.60256610769563 1.637944500994327
nu = 4: 0.08154845485377135 0.2216716829679195 0.60256610769563 1.637944500994327
Number of spline points: 10241
Calculating expansion coefficients
Expansion coefficients done
Computing train-train-kernels
     Calculating kernels for center species 1
 23%|████████████████████████████████████████▉                                                                                                                            100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 47/47 [02:41<00:00,  3.45s/it]
     Calculating kernels for center species 6
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 32/32 [01:15<00:00,  2.36s/it]
     Calculating kernels for center species 7
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 6/6 [00:01<00:00,  3.03it/s]
     Calculating kernels for center species 8
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 8/8 [00:03<00:00,  2.05it/s]
     Calculating kernels for center species 9
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 65.18it/s]
Computing train-test-kernels
     Calculating kernels for center species 1
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 92/92 [05:18<00:00,  3.46s/it]
     Calculating kernels for center species 6
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 64/64 [02:32<00:00,  2.39s/it]
     Calculating kernels for center species 7
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 11/11 [00:03<00:00,  2.80it/s]
     Calculating kernels for center species 8
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 14/14 [00:07<00:00,  1.91it/s]
     Calculating kernels for center species 9
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 61.67it/s]
Printing a few representative kernels:
nu = 0:
tensor([[[[0., 0., 0.],
          [0., 0., 0.],
          [0., 0., 0.]],

         [[0., 0., 0.],
          [0., 0., 0.],
          [0., 0., 0.]]],


        [[[0., 0., 0.],
          [0., 0., 0.],
          [0., 0., 0.]],

         [[0., 0., 0.],
          [0., 0., 0.],
          [0., 0., 0.]]]], device='cuda:0')
nu = 1:
tensor([[[[ 0.0434, -0.0466, -0.0453],
          [-0.0466,  0.2346,  0.0873],
          [-0.0453,  0.0873,  0.0568]],

         [[ 0.0234,  0.1375,  0.0292],
          [-0.2419, -0.3816, -0.1102],
          [-0.0672, -0.1961, -0.0460]]],


        [[[ 0.0234, -0.2419, -0.0672],
          [ 0.1375, -0.3816, -0.1961],
          [ 0.0292, -0.1102, -0.0460]],

         [[ 0.3763,  0.5509,  0.1255],
          [ 0.5509,  1.4125,  0.2079],
          [ 0.1255,  0.2079,  0.0590]]]], device='cuda:0')
nu = 2:
tensor([[[[ 0.0630,  0.0032, -0.0208],
          [ 0.0032,  0.0645,  0.0181],
          [-0.0208,  0.0181,  0.0162]],

         [[ 0.0348,  0.0491,  0.0158],
          [-0.0499, -0.0855, -0.0284],
          [-0.0234, -0.0488, -0.0141]]],


        [[[ 0.0348, -0.0499, -0.0234],
          [ 0.0491, -0.0855, -0.0488],
          [ 0.0158, -0.0284, -0.0141]],

         [[ 0.1377,  0.1875,  0.0385],
          [ 0.1875,  0.4998,  0.0650],
          [ 0.0385,  0.0650,  0.0244]]]], device='cuda:0')
nu = 3:
tensor([[[[ 6.3838e-02,  1.3785e-02, -1.9021e-02],
          [ 1.3785e-02,  2.4416e-02,  1.2226e-04],
          [-1.9021e-02,  1.2226e-04,  8.5534e-03]],

         [[ 3.8441e-02,  3.8502e-02,  1.6134e-02],
          [-4.2150e-03, -1.3074e-02, -4.4527e-03],
          [-1.4031e-02, -1.8187e-02, -7.1762e-03]]],


        [[[ 3.8441e-02, -4.2150e-03, -1.4031e-02],
          [ 3.8502e-02, -1.3074e-02, -1.8187e-02],
          [ 1.6134e-02, -4.4527e-03, -7.1762e-03]],

         [[ 6.4702e-02,  7.8107e-02,  1.7989e-02],
          [ 7.8107e-02,  1.9211e-01,  2.5745e-02],
          [ 1.7989e-02,  2.5745e-02,  1.1996e-02]]]], device='cuda:0')
nu = 4:
tensor([[[[ 0.0536,  0.0164, -0.0168],
          [ 0.0164,  0.0137, -0.0043],
          [-0.0168, -0.0043,  0.0064]],

         [[ 0.0317,  0.0305,  0.0135],
          [ 0.0065,  0.0042,  0.0020],
          [-0.0103, -0.0108, -0.0048]]],


        [[[ 0.0317,  0.0065, -0.0103],
          [ 0.0305,  0.0042, -0.0108],
          [ 0.0135,  0.0020, -0.0048]],

         [[ 0.0351,  0.0384,  0.0107],
          [ 0.0384,  0.0826,  0.0129],
          [ 0.0107,  0.0129,  0.0064]]]], device='cuda:0')
Beginning hyperparameter optimization
[1.98448215 9.99482125]
solution[1] hit a boundary
0.2660453115949404
Adaptive equivalent: tensor([    0.0000,   964.4000,  4819.5026, 16056.6891, 40120.9344],
       device='cuda:0')
tensor([0., 0., 0., 0., 0., 0.], device='cuda:0')
tensor([ 41.8198, -44.9592, -43.6888, -44.9592, 226.2111,  84.2375],
       device='cuda:0')
tensor([ 303.4518,   15.2889, -100.4108,   15.2889,  311.0690,   87.0919],
       device='cuda:0')
tensor([1025.0195,  221.3419, -305.4218,  221.3419,  392.0334,    1.9632],
       device='cuda:0')
tensor([2151.5010,  659.1316, -674.2096,  659.1316,  549.3976, -171.7953],
       device='cuda:0')

Final result (test RMSE or MAE):
500 0.2109406537180688
